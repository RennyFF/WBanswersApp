<Application
    x:Class="WBNEWANSWEARS.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:view="clr-namespace:WBNEWANSWEARS.MVVM.View"
    xmlns:viewModel="clr-namespace:WBNEWANSWEARS.MVVM.ViewModel">
    <Application.Resources>
        <!--  Data template for navigation  -->
        <DataTemplate DataType="{x:Type viewModel:HomeViewModel}">
            <view:HomeView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewModel:SettingsViewModel}">
            <view:SettingsView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewModel:CommentsViewModel}">
            <view:CommentsView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewModel:ActiveViewModel}">
            <view:ActiveView />
        </DataTemplate>

        <!--  Font  -->
        <FontFamily x:Key="Inter">pack://application:,,,/Fonts/#Inter</FontFamily>
        <!--  Menu buttons  -->
        <Style x:Key="menuButton" TargetType="RadioButton">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#FFE6E6" />
            <Setter Property="Height" Value="45" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="FontWeight" Value="Medium" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Margin" Value="15,0,15,5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            CornerRadius="10">
                            <ContentPresenter
                                x:Name="insideContent"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsChecked" Value="True">

                                <Setter TargetName="border" Property="Background" Value="#FFE6FF" />

                                <Setter Property="TextBlock.Foreground" Value="#8179B3" />

                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FFE6E6" />
                                <Setter Property="Foreground" Value="#8179B3" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="menuButtonIcon" TargetType="Icon:PackIconMaterial">
            <Setter Property="Margin" Value="25,0,0,0" />
            <Setter Property="Width" Value="20" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}" />
        </Style>

        <Style x:Key="menuButtonText" TargetType="TextBlock">
            <Setter Property="Margin" Value="20,0,0,2" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}" />
        </Style>

        <Style x:Key="menuButtonClose" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#FFE6E6" />
            <Setter Property="Height" Value="45" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="FontWeight" Value="Medium" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Margin" Value="15,0,15,15" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="10">
                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFE6FF" />
                    <Setter Property="Foreground" Value="PaleVioletRed" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="menuButtonIconClose" TargetType="Icon:PackIconMaterial">
            <Setter Property="Width" Value="28" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Height" Value="28" />
            <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" />
        </Style>

        <!--  HomeView Styles  -->

        <Style x:Key="HeaderPageTextStyle" TargetType="TextBlock">
            <Setter Property="Padding" Value="12" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="24" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Foreground" Value="#FFE6E6" />
        </Style>

        <Style x:Key="CardStyle" TargetType="Border">
            <Setter Property="Padding" Value="6,12,6,0" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Width" Value="160" />
            <Setter Property="Height" Value="130" />
            <Setter Property="Margin" Value="10,10,10,0" />
            <Setter Property="Background" Value="#7469B6" />
            <Setter Property="CornerRadius" Value="10 10 0 0" />
            <Setter Property="BorderBrush" Value="#FFE6E6" />
            <Setter Property="BorderThickness" Value="0,0,0,1" />
        </Style>

        <Style x:Key="CardTextStyle" TargetType="TextBlock">
            <Setter Property="Padding" Value="2,0,2,0" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="Medium" />
            <Setter Property="Foreground" Value="#FFE6E6" />
        </Style>

        <Style x:Key="CardUnderSectionStyle" TargetType="Border">
            <Setter Property="Padding" Value="6,0" />
            <Setter Property="Width" Value="160" />
            <Setter Property="Height" Value="40" />
            <Setter Property="Margin" Value="10,0,10,10" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="Background" Value="#69619B" />
            <Setter Property="CornerRadius" Value="0,0,10,10" />
        </Style>

        <!--  ScrollBar style  -->

        <SolidColorBrush x:Key="EslScrollbarThumb" Color="#FFE6E6" />

        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Visible" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border
                            Width="6"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="3" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumbHor" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border
                            Height="6"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="3" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Track Name="PART_Track" IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButton}" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
                        Margin="2,0,2,0"
                        Background="{DynamicResource EslScrollbarThumb}"
                        Style="{StaticResource ScrollBarThumb}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButton}" />
                </Track.IncreaseRepeatButton>
            </Track>
        </ControlTemplate>

        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Track Name="PART_Track" IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageLeftCommand" Style="{StaticResource ScrollBarPageButton}" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
                        Margin="0,2,0,2"
                        Background="{DynamicResource EslScrollbarThumb}"
                        Style="{StaticResource ScrollBarThumbHor}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageRightCommand" Style="{StaticResource ScrollBarPageButton}" />
                </Track.IncreaseRepeatButton>
            </Track>
        </ControlTemplate>

        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Height" Value="10" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="10" />
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollViewer">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Row="0" Grid.Column="0" />
                            <ScrollBar
                                x:Name="PART_VerticalScrollBar"
                                Grid.Row="0"
                                Grid.Column="1"
                                Maximum="{TemplateBinding ScrollableHeight}"
                                ViewportSize="{TemplateBinding ViewportHeight}"
                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                Value="{TemplateBinding VerticalOffset}" />
                            <ScrollBar
                                x:Name="PART_HorizontalScrollBar"
                                Grid.Row="1"
                                Grid.Column="0"
                                Maximum="{TemplateBinding ScrollableWidth}"
                                Orientation="Horizontal"
                                ViewportSize="{TemplateBinding ViewportWidth}"
                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                Value="{TemplateBinding HorizontalOffset}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="0" />
                            <ScrollBar
                                x:Name="PART_VerticalScrollBar"
                                Grid.Row="0"
                                Grid.Column="1"
                                Maximum="{TemplateBinding ScrollableHeight}"
                                ViewportSize="{TemplateBinding ViewportHeight}"
                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                Value="{TemplateBinding VerticalOffset}" />
                            <ScrollBar
                                x:Name="PART_HorizontalScrollBar"
                                Grid.Row="1"
                                Grid.Column="0"
                                Maximum="{TemplateBinding ScrollableWidth}"
                                Orientation="Horizontal"
                                ViewportSize="{TemplateBinding ViewportWidth}"
                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                Value="{TemplateBinding HorizontalOffset}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  ActiveView styles  -->

        <Style x:Key="ListBoxCustomStyle" TargetType="ListBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Border
                            Margin="15"
                            Padding="12"
                            Background="#7469B6"
                            CornerRadius="10">
                            <ScrollViewer VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ListBoxItemCustomStyle" TargetType="ListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Background="{TemplateBinding Background}" CornerRadius="10">
                            <ContentPresenter Cursor="Hand" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CustomCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Border
                            Width="40"
                            Height="40"
                            Margin="5"
                            Background="#69619B"
                            CornerRadius="5"
                            Cursor="">
                            <Grid>
                                <Path
                                    x:Name="CheckMark"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M 2,7 L 7,12 L 20,0"
                                    Stroke="White"
                                    StrokeThickness="3"
                                    Visibility="Collapsed" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ActiveViewCardTextStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="12,0,0,0" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="FontWeight" Value="Medium" />
            <Setter Property="Foreground" Value="#FFE6E6" />
        </Style>

        <Style x:Key="ActiveViewCardStyle" TargetType="Border">
            <Setter Property="Margin" Value="0,0,10,12" />
            <Setter Property="Height" Value="50" />
            <Setter Property="CornerRadius" Value="5" />
            <Setter Property="Background" Value="#8179B3" />
        </Style>

        <Style x:Key="ActiveViewBottomText" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Foreground" Value="#FFE6E6" />
        </Style>


        <!--  SettingsView styles  -->

        <Style x:Key="SettingsListBoxCustomStyle" TargetType="ListBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Border Background="#7469B6" CornerRadius="10">
                            <ScrollViewer VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SettingsListBoxItemContainerCustomStyle" TargetType="ListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border
                            x:Name="border"
                            Width="345"
                            Height="50"
                            Margin="0,0,10,10"
                            Background="#8179B3"
                            BorderBrush="Transparent"
                            BorderThickness="1"
                            CornerRadius="10"
                            Cursor="Hand">
                            <ContentPresenter />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="White" />
                                <Setter TargetName="border" Property="BorderThickness" Value="2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="usersMenuButton" TargetType="RadioButton">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#FFE6E6" />
            <Setter Property="Height" Value="50" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="FontWeight" Value="Medium" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            CornerRadius="6">
                            <ContentPresenter
                                x:Name="insideContent"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="AliceBlue" />
                                <Setter TargetName="border" Property="BorderThickness" Value="2" />
                                <Setter Property="TextBlock.Foreground" Value="White" />

                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">

                                <Setter Property="TextBlock.Foreground" Value="#FFE6E6" />

                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="TextBlock.Foreground" Value="White" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="AddAndDeleteButtonsBorder" TargetType="Border">
            <Setter Property="Background" Value="#7469B6" />
            <Setter Property="CornerRadius" Value="10" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Padding" Value="10" />
        </Style>


        <Style x:Key="AddAndDeleteButtonsIcon" TargetType="Icon:PackIconMaterial">
            <Setter Property="Foreground" Value="#FFE6E6" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Width" Value="18" />
            <Setter Property="Height" Value="18" />
        </Style>

        <Style x:Key="SettingsViewSmallGrayText" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontWeight" Value="Regular" />
            <Setter Property="Foreground" Value="LightGray" />
        </Style>

        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="#7469B6" />
            <Setter Property="BorderThickness" Value="0,0,0,2" />
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientStop Offset="0.0" Color="Transparent" />
                        <GradientStop Offset="0.3" Color="#FFE6E6" />
                        <GradientStop Offset="0.7" Color="#FFE6E6" />
                        <GradientStop Offset="1" Color="Transparent" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Padding" Value="5,4" />
            <Setter Property="Cursor" Value="IBeam" />
            <Setter Property="Height" Value="40" />
            <Setter Property="FontWeight" Value="Regular" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="MaxHeight" Value="40" />
            <Setter Property="AllowDrop" Value="True" />
            <Setter Property="Foreground" Value="#FFE6E6" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border
                            x:Name="txtBorder"
                            MaxWidth="{TemplateBinding MaxWidth}"
                            MaxHeight="{TemplateBinding MaxHeight}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="1"
                            SnapsToDevicePixels="True">
                            <Grid Margin="{TemplateBinding Padding}">
                                <ScrollViewer
                                    x:Name="PART_ContentHost"
                                    Margin="-2,3"
                                    Focusable="False"
                                    HorizontalScrollBarVisibility="Hidden"
                                    VerticalScrollBarVisibility="Hidden" />
                                <Label
                                    x:Name="WaterMarkLabel"
                                    Padding="{TemplateBinding Padding}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Tag}"
                                    FontWeight="{TemplateBinding FontWeight}"
                                    Foreground="{TemplateBinding Foreground}"
                                    Visibility="Collapsed" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value="" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="WaterMarkLabel" Property="Visibility" Value="Visible" />
                            </MultiTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                            <GradientStop Offset="0.0" Color="Transparent" />
                                            <GradientStop Offset="0.3" Color="White" />
                                            <GradientStop Offset="0.7" Color="White" />
                                            <GradientStop Offset="1" Color="Transparent" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                            <GradientStop Offset="0.0" Color="Transparent" />
                                            <GradientStop Offset="0.3" Color="White" />
                                            <GradientStop Offset="0.7" Color="White" />
                                            <GradientStop Offset="1" Color="Transparent" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SettingsCustomCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Border
                            Width="20"
                            Height="20"
                            Margin="5"
                            Background="#69619B"
                            CornerRadius="5"
                            Cursor="">
                            <Border
                                x:Name="CheckMark"
                                Margin="5"
                                Background="white"
                                CornerRadius="2"
                                Visibility="Collapsed" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="ToggleButton">
            <Grid>
                <Border
                    Name="Border"
                    Width="20"
                    Height="20"
                    Background="#69619B"
                    CornerRadius="5" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Panel.Background" Value="#888" />
                    <Setter Property="TextElement.Foreground" Value="#888" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxFlatStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            <Setter Property="TextElement.Foreground" Value="White" />
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton
                                Name="ToggleButton"
                                ClickMode="Press"
                                Focusable="False"
                                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                Template="{StaticResource ComboBoxToggleButtonTemplate}" />

                            <ContentPresenter
                                Name="ContentSite"
                                Margin="5,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                IsHitTestVisible="False" />
                            <TextBox
                                Name="PART_EditableTextBox"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                Focusable="True"
                                IsReadOnly="{TemplateBinding IsReadOnly}"
                                Visibility="Hidden">
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox">
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <Popup
                                Name="Popup"
                                AllowsTransparency="True"
                                Focusable="False"
                                IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                                Placement="Bottom"
                                PopupAnimation="Slide">
                                <Grid
                                    Name="DropDown"
                                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                    SnapsToDevicePixels="True">
                                    <Border
                                        Name="DropDownBorder"
                                        Margin="0,2,0,0"
                                        Background="#69619B"
                                        CornerRadius="2" />
                                    <ScrollViewer
                                        Margin="0,2"
                                        HorizontalAlignment="Center"
                                        SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="95" />
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="#888" />
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                                <Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible" />
                                <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Hidden" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Padding" Value="4,2" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="TextElement.Foreground" Value="White" />
            <Setter Property="Control.SnapsToDevicePixels" Value="True" />
            <Setter Property="Control.FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border
                            Name="Border"
                            Padding="{TemplateBinding Control.Padding}"
                            Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            BorderThickness="0,0,0,0">
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding Control.SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
                                <Setter TargetName="Border" Property="Panel.Background" Value="#FFE6E6" />
                                <Setter TargetName="Border" Property="TextElement.Foreground" Value="#8179B3" />
                                <Setter TargetName="Border" Property="CornerRadius" Value="2" />
                            </Trigger>
                            <Trigger Property="ComboBoxItem.IsSelected" Value="True">
                                <Setter Property="TextElement.Foreground" Value="White" />
                                <Setter TargetName="Border" Property="Border.BorderBrush" Value="White" />
                                <Setter TargetName="Border" Property="Border.BorderThickness" Value="0,0,0,2" />
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="#888" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  CommentsView styles  -->

        <Style x:Key="CommentsListBoxItemContainerCustomStyle" TargetType="ListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border
                            x:Name="border"
                            Width="210"
                            Height="50"
                            Margin="0,0,10,10"
                            Background="#8179B3"
                            BorderBrush="Transparent"
                            BorderThickness="1"
                            CornerRadius="10"
                            Cursor="Hand">
                            <ContentPresenter />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="White" />
                                <Setter TargetName="border" Property="BorderThickness" Value="2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
